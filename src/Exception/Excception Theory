		
	Java Exceptions : 
		When executing Java code, different errors can occur: coding errors made by the programmer, errors due to wrong input, or other unforeseeable things.
		
		When an error occurs, Java will normally stop and generate an error message. The technical term for this is: Java will throw an exception (throw an error).
		
		* Java try and catch :
			The try statement allows you to define a block of code to be tested for errors while it is being executed.
			
			The catch statement allows you to define a block of code to be executed, if an error occurs in the try block
		* The throw keyword
			The throw statement allows you to create a custom error.
			The throw statement is used together with an exception type. 
			There are many exception types available in Java:
				ArithmeticException, FileNotFoundException, ArrayIndexOutOfBoundsException, SecurityException, etc:



//Exception :
//		- Exception is an error which occured during runtime.
//		- when run time errors occurs, the flow of program get terminated abroubtly.abstract
//		
/*	keywords :
		try
		catch
		throw	: 
				- used to throw the custom/user defined exceptions.
				- used to throw the exception (runtime) explicitly.
		throws	: 
				- Related to IO or SQL exception
		finally
*/

/*	Types :
		- Built in exception
				a] Unchecked - Runtime
					- ArithmaticException
					- NullpointerException
					- ArrayIndexOutOfBoundsException 
					- ClassCastException
				b] Checked - Compile Time
					- IOExceptions
					- SQLExceptions
		- User defined Exceptions
*/			
/*
Object Class :
		- Throwable Class :	(java.lang.Throwable)
				-Exception Class	(java.lang.Exception)
						- Checked
						- Unchecked				
				-Errors Class	(java.lang.Error)
*/				
