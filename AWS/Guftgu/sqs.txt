- SQS: Pull Service | SNS: Push Service
- SQS is a fast, reliable and fully managed Message Queue service
- It is a webservice that gives you to access to message queue that store messages waiting to be processed
- It offers a relicable, highly scalable hosted queue for storing messages between servers. 
  (Server1 --push--> SQS --pull by server2--> server2 )
- It allows the DECOUPLING (if serverA failed to process the message, then it will picked by serverB) of application components
  such that a failure in one component does not cause a bigger problem to application functionality (like in coupling app).
- Using sqs, you no longer need a highly available message Cluster or the burden of running it.
- You can delete all the messages in an SQS queue without deleting the SQS queue itself.
- You can use applications on EC2 instances to read and process the SQS queue message.
- You can use AUTOSCALING to scale the EC2 fleet processing the SQS message, as the queue size increases.
- These applications on EC2 instances can process the SQS messages/jobs then post the results to other SQS queues or other AWS service.

Types Of Queue:
    1. Standard Queue:
        - High (Unlimited) throughput
        - At least once delivery (message may be repeated)
        - Duplicacy is possible
        - Best effort ordering (Order is not in Sequence)
    2. FIFO Queue:
        - Limited throughput (300 TPS ) (TPS: Throughput Per Second)
        - Exactly once processing 
        - Duplicacy not possible
        - Strict Ordering -> FIFO
        - FIFO Queues are limited to 300 transactions per seconds (TPS), but have all the capabilities of standard queue. (FIFO better that Standard queue)

SQS Pricing:
    - The first 1 million monthly requests are free, after that pricing is to regions.
    - eg. In mumbai region:
        - Standart Queue:   $0.40/million request
        - FIFI Queue    :   $0.50/million request

How SQS Charges:
    1. API action: every sqs action count as a request.
    2. FIFO request: API actions for sending, receiving, deleting and changing visibility of message from FIFO queue are charged at FIFO rates.
    3. Contents of Request: A single request can have from 1 to 10 messages, upto a maximum total payload of 256 kb.
    4. Size of payload: Each 64kb chunk of a payload is billed as 1 request (for eg. API action with a 256KB payload is billed as 4 request)
    5. Interaction with Amazon S3: pay s3 bill as well.
    6. Interaction with AWS KMS: pay KMS bill as well.

-------------------
Polling:
    1. Short Polling:
        - A request is retuned immediately even if the queue is empty. 
          (Server call SQS, check message is avaible, 
            if not, then comeback immediately with empty request. 
            if message present, take message and come back immediately)
        - It does not wait for message to appear in the queue.
        - It queries only a subset of the avaible servers for message (based on weighted random distribution)
        - Default by SQS
        - ReceiveMessageWaitTime is set to 0.
        - More request are used which implies higher cost.
    2. Long Polling:
        - Is preferred to regular/short polling. It uses fewer requests and request cost by
        - Eliminating false empty responses by querying all the servers
        - reduce the number of empty responses, 
          by allowing amazon SQS to wait until a message is available in the queue before sending a response. 
          Unless the connection timeout(20sec)
        - Receive MessageWaitTime is set to non-zero value (max 20 Seconds).
        - Billing is same for both pollings. 

ReceiveMessageWaitTime:
    - The default time is 0 seconds. Max is 20 sec.
    - This is max amount of time that a long polling receive call will wait for a message to become available before returning an empty response.

Retention Period:
    - SQS message can remain in the queue for upto 14 days (SQS retention period)
    - Range is 1min upto 14 days. Default is 4 days.
    - Once the maximum retention period of a message is reached, it will be deleted automatically from the queue.
    - Messages can be sent to the queue and read from the queue simultaneously
    - SQS can be used with DynamoDB, EC2, ECS, RedShift, RDS, Lambda, S3 to make distributed/Decoupled applications
    - You can have multiple queues with different priorities

Visibility Timeout:
    - Is the duration of time a message is locked for read by other servers
    - Max is 12 hours and default is 30 sec.
    - A server that read a message to process it. Can change the message visibility timeout if it need more time to process the message.
    - After a message is read, there are the following possibilities:
        1. An ACK acknowledment is received that a message is processed, so it must be deleted from the queue to avoid duplicates.
        2. If a fail is received or the visibility timeout expires, the message will then be unlocked for read, such that it can be read and processed by another servers.

Delivery Delay:
    - AWS SQS provides delivery delay options to postpone the delivery of new message to a Queue, if delivery delay is defined for a queue, any new messages will not be visible to the server for the duration of delay. 
    - The default(min) delay for a queue is 0 Seconds (Short polling). The maximum is 15 minutes(long polling).


Dead Letter Queue:
    - The main task of a dead letter queue is handling message failure.
    - A DLQ lets you set aside and isolate messages that can't be processed correctly to determine, why their processing didn't succeed.
    - Don't use a DLQ with a FIFO Queue, if you dont want to break the exact order of message or operations.
    - DLQ must be of the same type as the source queue (Standard or FIFO).