Advantages of single page application:
	- SPA makes a web application faster and gives the user a reactive experience.
	- Using JS to change the content of the webpage dynamically is much faster than having to reach out to the server for every page change and for every new piece of data we want to display.
	- If we do need some data from the server, we can load it in the background without making the webpage unresponsive.

Why use Angular?
	- Angular gives our application a clean and loosely coupled structure that is easy to understand and maintain.
	- It brings a lot of utility code which can be re-used in lot of applications. Especially, when dealing with user navigation and browsing history.
	- Application built with Angular are more testable.

How Angular execute?
	- main.js: 
		- starting point of angular application.
		- it loads/bootstrap AppModule
		- main.js loads all the modules and components.
		- once module and components are loaded, It will load index.html file.
		

@ViewChild('templateRefVarName') : ElementRef;  
	- data type is ElementRef
	- you cant render(get) data from ViewChild before 'ngAfterViewInit' hook
	- with angular 8 , that should be @ViewChild('templateRefVarName', {static:true}) since we'll also use the selected element in ngOnInit.
	- @ViewChild(componentName)
	- ViewChild has nativeElement property, with the help of it, we can access dom
	- eg.
		@ViewChild('studentName') sName : ElementRef;
		addStudent(){
			this.sname = this.sname.nativeElement.value();
	
@ContentChild() :
	- Getting Access to ng-content with the @ContentChild Parameter Decorator
	- We cant access the value before we reach ngAfterContentInit
	- With Angular 8 that should be @ContentChild('...',{static:true}) since we'll use the selected element in ngOnInit.
	

location.reload()	// reload page
